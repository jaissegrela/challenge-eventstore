InMemoryEventStore group together same type events in the same collection. This was done by using a dictionary where the key is the event type and the value is the list of events. Java has at least two different kind of dictionary, HashMap and Hashtable. Both have constant execution time for put and remove operations, but Hashtable is synchronized. It is thread-safe and can be shared with many threads. 
For list data structure there are Vector, ArrayList and LinkedList. ArrayList and LinkedList have execution time O(1) for add operation and O(n) for remove operation, but the random access time of Arraylist is O(1) while LinkedList is O(n). So, Arraylist would be a candidate but it is not thread-safe, and Vector is the thread-safe version of ArrayList.That is why it was chosen Vector instead.
Execution time of InMemoryEventStore: insert O(1), removeAll O(1), and query O(1).
Execution time of Iterator: current O(1), remove O(n) because is the execution time of Vector remove, and moveNext has amortized execution time O(1). It means, being n the number of elements of a same type, the average cost of an operation is O(n)/n = O(1).